% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import-standalone-stack-tools.R
\name{.find_namespace}
\alias{.find_namespace}
\title{Find the package environment for a given environment or function}
\usage{
.find_namespace(env = rlang::caller_env())
}
\arguments{
\item{env}{an environment or function.}
}
\value{
a namespaced package environment
}
\description{
This searches the environment stack looking for the first environment
that defines a package. This is the package that the function is defined in.
If no namespace environment is found then the function is in the global
environment.
}
\keyword{internal}

\section{Unit tests}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{

env = .find_namespace(rlang::abort)
testthat::expect_equal(unname(getNamespaceName(env)), "rlang")

# TODO: this test fails when running in testthat environment but not otherwise
# env = new.env(parent=emptyenv())
# assign("f", function() {"test"}, envir = env)
# env2 = .find_namespace(env$f)
# testthat::expect_null(.find_namespace(env$f))

}\if{html}{\out{</div>}}
}


% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import-standalone-singleton.R
\name{.singleton}
\alias{.singleton}
\title{A once only evaluation function generator}
\usage{
.singleton(
  expr,
  on_error = function(e) {
     stop("Initialising value failed:", e, call. = FALSE)
 }
)
}
\arguments{
\item{expr}{an expression the value of which is to be cached.}

\item{on_error}{a function that takes a single value (the error) and
handles or rethrows it.}
}
\value{
the result of expr.
}
\description{
This function can be used in a package to create a package local variable
that is calculated once on first use and stored for the rest of the session.
If the expression throws an uncaught error the value is not stored. The
expression is evaluated in the environment it is first called in.
}
\concept{cache}
\keyword{internal}

\section{Unit tests}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{

fixed_rnorm = .singleton(rnorm(10))
a = fixed_rnorm()
b = fixed_rnorm()
testthat::expect_equal(a,b)
}\if{html}{\out{</div>}}
}


% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import-standalone-stack-tools.R
\name{.update_fenced_block}
\alias{.update_fenced_block}
\title{Update a fenced block within a file with new content based on a template}
\usage{
.update_fenced_block(
  .input,
  .template,
  name,
  ...,
  .start_glue = "# {name} start ----",
  .end_glue = "# {name} end ----",
  .insert_before = "# insert before ----",
  .parse_fn = ~list()
)
}
\arguments{
\item{.input}{the input as a character vector}

\item{.template}{the whisker template as a character vector}

\item{name}{a name for the block}

\item{...}{additional named parameters supplied to the whisker template}

\item{.start_glue}{a glue specification for the marker of the start of the
block to be replaced. May use any of the whisker variables e.g. \code{"# {name} start ----"}. This can also be given as a numeric index, were particularly
0 is the beginning of the input and -1 is the end. If numeric it is start
inclusive.}

\item{.end_glue}{a glue specification for the marker of the end of the
block to be replaced. May use any of the whisker variables e.g.
\code{"# {name} end ----"} or numeric as above. If numeric it is end inclusive.}

\item{.insert_before}{a marker for where in the file to insert a block if no
matching start and end markers are found.}

\item{.parse_fn}{a function that takes the matching block in the source and
extracts a named list of data from it. The default returns an empty list.}
}
\value{
A character vector of the updated content of the file. Does not
write the file
}
\description{
This function looks for a fenced section (typically of code) with markers defined by
\code{.start_glue} and \code{.end_glue} and replaces them with the evaluated template
content. If no matching sections are found the new code is inserted before the
matched \code{.insert_before} marker (or at the end if that is not found)
}
\examples{
# double braces in mustache files, single braces in glue specs.
template = "# {{name}} {{status}}"

input = c(
  "before",
  "# test start ----",
  "# test original",
  "# test end ----",
  "# insert before ----",
  "end"
)

input = .update_fenced_block(
  input, template, name = "test", status = "update",
  .start_glue = "# {name} start ----",
  .end_glue = "# {name} end ----"
)

input = .update_fenced_block(
  input, template, name = "test2", status = "update",
  .start_glue = "# {name} start ----",
  .end_glue = "# {name} end ----"
)

.update_fenced_block(
  input, template, name = "test", status = "update",
  .start_glue = 2,
  .end_glue = "# {name} end ----"
)



}
\keyword{internal}
